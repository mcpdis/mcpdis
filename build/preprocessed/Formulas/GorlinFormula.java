/*
 * GorlinFormula.java
 *
 * Created on March 8, 2006, 12:25 AM
 */

package Formulas;

import javax.microedition.midlet.*;
import javax.microedition.lcdui.*;

import net.dclausen.microfloat.*;
/**
 *
 * @author user
 */
public class GorlinFormula extends MIDlet 
        implements javax.microedition.lcdui.CommandListener,
                   javax.microedition.lcdui.ItemStateListener {

    private static final String[] TYPES = { "Mitral", "Aortic", "Tricuspid", "Pulmonic" } ;
    /** Creates a new instance of GorlinFormula */
    public GorlinFormula() {
    }

    private Persistence.FormulaValue get_formulaValue() {
        return new Persistence.FormulaValue("Gorlin Formula (" + get_result().getLabel().replace('=', ')'), get_result().getText());
    }
    
// --- This section is auto-generated by NetBeans IDE. Do not modify or you may lose your changes.//<editor-fold id="MVDMethods" defaultstate="collapsed" desc="This section is auto-generated by NetBeans IDE.">//GEN-BEGIN:MVDMethods
    /**
     * This method initializes UI of the application.
     */
    private void initialize() {
// For adding user code into this block, select "Design" item in the inspector and invoke property editor on Action property in Properties window.
        javax.microedition.lcdui.Display.getDisplay(this).setCurrent(get_gorlinForm());
    }
    
    /**
     * Called by the system to indicate that a command has been invoked on a particular displayable.
     * @param command the Command that ws invoked
     * @param displayable the Displayable on which the command was invoked
     **/
    public void commandAction(javax.microedition.lcdui.Command command, javax.microedition.lcdui.Displayable displayable) {
        if (displayable == gorlinForm) {
            if (command == backCommand1) {
// For adding user code into this block, select "Design | Screens | gorlinForm [Form] | Assigned Commands | backCommand1" item in the inspector and invoke property editor on Action property in Properties window.
                javax.microedition.lcdui.Display.getDisplay(this).setCurrent(null);
                destroyApp(true);
                notifyDestroyed();
            } else if (command == saveCommand) {
// For adding user code into this block, select "Design | Screens | gorlinForm [Form] | Assigned Commands | saveCommand" item in the inspector and invoke property editor on Action property in Properties window.
                Persistence.PatientSuiteDispatcher.invoke(this, get_gorlinForm(), get_formulaValue());
            }
        }
    }
    
    /**
     * This method returns instance for gorlinForm component and should be called instead of accessing gorlinForm field directly.
     * @return Instance for gorlinForm component
     **/
    private javax.microedition.lcdui.Form get_gorlinForm() {
        if (gorlinForm == null) {
            gorlinForm = new javax.microedition.lcdui.Form("Gorlin Formula", new javax.microedition.lcdui.Item[] {
                get_cardiacOutput(),
                        get_heartRate(),
                        get_DFP(),
                        get_MVG(),
                        get_gorlinType(),
                        get_result()
            });
            gorlinForm.addCommand(get_backCommand1());
            gorlinForm.addCommand(get_saveCommand());
            gorlinForm.setCommandListener(this);
        }
        return gorlinForm;
    }
    
    /**
     * This method returns instance for cardiacOutput component and should be called instead of accessing cardiacOutput field directly.
     * @return Instance for cardiacOutput component
     **/
    private javax.microedition.lcdui.TextField get_cardiacOutput() {
        if (cardiacOutput == null) {
            cardiacOutput = new javax.microedition.lcdui.TextField("Cardiac Output [L/min]", "", 6, 0x0);
        }
        return cardiacOutput;
    }
    
    /**
     * This method returns instance for heartRate component and should be called instead of accessing heartRate field directly.
     * @return Instance for heartRate component
     **/
    private javax.microedition.lcdui.TextField get_heartRate() {
        if (heartRate == null) {
            heartRate = new javax.microedition.lcdui.TextField("Heart Rate [bpm]", "", 6, 0x0);
        }
        return heartRate;
    }
    
    /**
     * This method returns instance for DFP component and should be called instead of accessing DFP field directly.
     * @return Instance for DFP component
     **/
    private javax.microedition.lcdui.TextField get_DFP() {
        if (DFP == null) {
            DFP = new javax.microedition.lcdui.TextField("Diastolic filling period [spb]", "", 6, 0x0);
        }
        return DFP;
    }
    
    /**
     * This method returns instance for MVG component and should be called instead of accessing MVG field directly.
     * @return Instance for MVG component
     **/
    private javax.microedition.lcdui.TextField get_MVG() {
        if (MVG == null) {
            MVG = new javax.microedition.lcdui.TextField("Mean valve gradient [mmHg]", "", 6, 0x0);
        }
        return MVG;
    }
    
    /**
     * This method returns instance for gorlinType component and should be called instead of accessing gorlinType field directly.
     * @return Instance for gorlinType component
     **/
    private javax.microedition.lcdui.ChoiceGroup get_gorlinType() {
        if (gorlinType == null) {
            gorlinType = new javax.microedition.lcdui.ChoiceGroup("Type", javax.microedition.lcdui.Choice.EXCLUSIVE, new java.lang.String[] {
                "Mitral",
                        "Tricuspid",
                        "Aortic",
                        "Pulmonic"
            }, new javax.microedition.lcdui.Image[] {
                null,
                        null,
                        null,
                        null
            });
            gorlinType.setSelectedFlags(new boolean[] {
                true,
                        false,
                        false,
                        false
            });
        }
        return gorlinType;
    }
    
    /**
     * This method returns instance for result component and should be called instead of accessing result field directly.
     * @return Instance for result component
     **/
    private javax.microedition.lcdui.StringItem get_result() {
        if (result == null) {
            result = new javax.microedition.lcdui.StringItem("Mitral valve area [cm2] = ", "");
        }
        return result;
    }
    
    /**
     * This method returns instance for backCommand1 component and should be called instead of accessing backCommand1 field directly.
     * @return Instance for backCommand1 component
     **/
    private javax.microedition.lcdui.Command get_backCommand1() {
        if (backCommand1 == null) {
            backCommand1 = new javax.microedition.lcdui.Command("Back", javax.microedition.lcdui.Command.BACK, 1);
        }
        return backCommand1;
    }
    
    /**
     * This method returns instance for saveCommand component and should be called instead of accessing saveCommand field directly.
     * @return Instance for saveCommand component
     **/
    private javax.microedition.lcdui.Command get_saveCommand() {
        if (saveCommand == null) {
            saveCommand = new javax.microedition.lcdui.Command("Save", javax.microedition.lcdui.Command.ITEM, 1);
        }
        return saveCommand;
    }
    
    javax.microedition.lcdui.Form gorlinForm;
    javax.microedition.lcdui.TextField cardiacOutput;
    javax.microedition.lcdui.TextField heartRate;
    javax.microedition.lcdui.TextField DFP;
    javax.microedition.lcdui.TextField MVG;
    javax.microedition.lcdui.ChoiceGroup gorlinType;
    javax.microedition.lcdui.StringItem result;
    javax.microedition.lcdui.Command backCommand1;
    javax.microedition.lcdui.Command saveCommand;
// --- This is the end of auto-generated section.//</editor-fold>//GEN-END:MVDMethods
    
    public void startApp() {
        initialize();
        get_gorlinForm().setItemStateListener(this);
    }
    
    public void pauseApp() {
    }
    
    public void destroyApp(boolean unconditional) {
    }
    
    public void itemStateChanged(javax.microedition.lcdui.Item item) {
        if (!allItemsValid()) {
            get_result().setText("<make sure there no blank and invalid fields>");
        } else {
            int selectedIndex = get_gorlinType().getSelectedIndex();

            get_result().setLabel(TYPES[selectedIndex] + " valve area [cm2] = ");
            
            String k;
            if (selectedIndex == 0) {
                k = "37.7";
            } else {
                k = "44.3";
            }
            String co = get_cardiacOutput().getString();
            String hr = get_heartRate().getString();
            String dfp = get_DFP().getString();
            INumeric sqrtOfMVG = new Float(get_MVG().getString()).sqrt();
            INumeric denominator = new Float(k).mul(sqrtOfMVG).mul(hr).mul(dfp);
            get_result().setText(new Float(co).div(denominator).mul("1000").format(2));
        }
        
    }
    
    private boolean allItemsValid() {
        try {
            MicroFloat.parseFloat(get_cardiacOutput().getString());
            MicroFloat.parseFloat(get_heartRate().getString());
            MicroFloat.parseFloat(get_DFP().getString());
            return true;
        } catch (Exception e) {
            return false;
        }
    }
}

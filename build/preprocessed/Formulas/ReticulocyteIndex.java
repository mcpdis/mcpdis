/*
 * ReticulocyteIndex.java
 *
 * Created on March 11, 2006, 4:30 PM
 */

package Formulas;

import javax.microedition.midlet.*;
import javax.microedition.lcdui.*;

import net.dclausen.microfloat.*;
/**
 *
 * @author user
 */
public class ReticulocyteIndex extends MIDlet 
        implements javax.microedition.lcdui.CommandListener,
                   javax.microedition.lcdui.ItemStateListener {
    
    /** Creates a new instance of ReticulocyteIndex */
    public ReticulocyteIndex() {
    }

    private Persistence.FormulaValue get_formulaValue() {
        return new Persistence.FormulaValue("Reticulocyte Index", get_result().getText());
    }
    
// --- This section is auto-generated by NetBeans IDE. Do not modify or you may lose your changes.//<editor-fold id="MVDMethods" defaultstate="collapsed" desc="This section is auto-generated by NetBeans IDE.">//GEN-BEGIN:MVDMethods
    /**
     * This method initializes UI of the application.
     */
    private void initialize() {
// For adding user code into this block, select "Design" item in the inspector and invoke property editor on Action property in Properties window.
        javax.microedition.lcdui.Display.getDisplay(this).setCurrent(get_retIndexForm());
    }
    
    /**
     * Called by the system to indicate that a command has been invoked on a particular displayable.
     * @param command the Command that ws invoked
     * @param displayable the Displayable on which the command was invoked
     **/
    public void commandAction(javax.microedition.lcdui.Command command, javax.microedition.lcdui.Displayable displayable) {
        if (displayable == retIndexForm) {
            if (command == backCommand1) {
// For adding user code into this block, select "Design | Screens | retIndexForm [Form] | Assigned Commands | backCommand1" item in the inspector and invoke property editor on Action property in Properties window.
                javax.microedition.lcdui.Display.getDisplay(this).setCurrent(null);
                destroyApp(true);
                notifyDestroyed();
            } else if (command == saveCommand) {
// For adding user code into this block, select "Design | Screens | retIndexForm [Form] | Assigned Commands | saveCommand" item in the inspector and invoke property editor on Action property in Properties window.
                Persistence.PatientSuiteDispatcher.invoke(this, get_retIndexForm(), get_formulaValue());
            }
        }
    }
    
    /**
     * This method returns instance for retIndexForm component and should be called instead of accessing retIndexForm field directly.
     * @return Instance for retIndexForm component
     **/
    private javax.microedition.lcdui.Form get_retIndexForm() {
        if (retIndexForm == null) {
            retIndexForm = new javax.microedition.lcdui.Form("Reticulocyte Index", new javax.microedition.lcdui.Item[] {
                get_reticulocytes(),
                        get_hemotocrit(),
                        get_result()
            });
            retIndexForm.addCommand(get_backCommand1());
            retIndexForm.addCommand(get_saveCommand());
            retIndexForm.setCommandListener(this);
        }
        return retIndexForm;
    }
    
    /**
     * This method returns instance for backCommand1 component and should be called instead of accessing backCommand1 field directly.
     * @return Instance for backCommand1 component
     **/
    private javax.microedition.lcdui.Command get_backCommand1() {
        if (backCommand1 == null) {
            backCommand1 = new javax.microedition.lcdui.Command("Back", javax.microedition.lcdui.Command.BACK, 1);
        }
        return backCommand1;
    }
    
    /**
     * This method returns instance for reticulocytes component and should be called instead of accessing reticulocytes field directly.
     * @return Instance for reticulocytes component
     **/
    private javax.microedition.lcdui.TextField get_reticulocytes() {
        if (reticulocytes == null) {
            reticulocytes = new javax.microedition.lcdui.TextField("Reticulocytes [%]", "", 20, 0x0);
        }
        return reticulocytes;
    }
    
    /**
     * This method returns instance for hemotocrit component and should be called instead of accessing hemotocrit field directly.
     * @return Instance for hemotocrit component
     **/
    private javax.microedition.lcdui.TextField get_hemotocrit() {
        if (hemotocrit == null) {
            hemotocrit = new javax.microedition.lcdui.TextField("Hematocrit [%]", "", 20, 0x0);
        }
        return hemotocrit;
    }
    
    /**
     * This method returns instance for result component and should be called instead of accessing result field directly.
     * @return Instance for result component
     **/
    private javax.microedition.lcdui.StringItem get_result() {
        if (result == null) {
            result = new javax.microedition.lcdui.StringItem("Index =", "");
        }
        return result;
    }
    
    /**
     * This method returns instance for saveCommand component and should be called instead of accessing saveCommand field directly.
     * @return Instance for saveCommand component
     **/
    private javax.microedition.lcdui.Command get_saveCommand() {
        if (saveCommand == null) {
            saveCommand = new javax.microedition.lcdui.Command("Save", javax.microedition.lcdui.Command.ITEM, 1);
        }
        return saveCommand;
    }
    
    javax.microedition.lcdui.Form retIndexForm;
    javax.microedition.lcdui.Command backCommand1;
    javax.microedition.lcdui.TextField reticulocytes;
    javax.microedition.lcdui.TextField hemotocrit;
    javax.microedition.lcdui.StringItem result;
    javax.microedition.lcdui.Command saveCommand;
// --- This is the end of auto-generated section.//</editor-fold>//GEN-END:MVDMethods
    
    public void startApp() {
        initialize();
        get_retIndexForm().setItemStateListener(this);
    }
    
    public void pauseApp() {
    }
    
    public void destroyApp(boolean unconditional) {
    }
 
    public void itemStateChanged(javax.microedition.lcdui.Item item) {
        if (!allItemsValid()) {
            get_result().setText("<all items must be non-empty and valid>");
        } else {
            String reti = get_reticulocytes().getString();
            String hct = get_hemotocrit().getString();
            INumeric cf = getCorrectionFactor(Long.parseLong(hct));
            get_result().setText(new Float(reti).mul(new Float(hct).div("45")).div(cf).format(2));
        }
    }
    
    private INumeric getCorrectionFactor(long hct) {
        if (hct > 50) {
            return new Float("1");
        } else if (hct >= 41 && hct <= 50) {
            return new Float("1");
        } else if (hct >= 30 && hct <= 40) {
            return new Float("1.5");
        } else if (hct >= 20 && hct <= 29) {
            return new Float("2");
        } else {
            return new Float("2.5");
        }
    }
    
    private boolean allItemsValid() {
        try {
            MicroFloat.parseFloat(get_reticulocytes().getString());
            MicroFloat.parseFloat(get_hemotocrit().getString());
            return true;
        } catch (Exception e) {
            return false;
        }
    }
}

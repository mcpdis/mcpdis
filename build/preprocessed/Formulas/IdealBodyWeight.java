/*
 * IdealBodyWeight.java
 *
 * Created on March 9, 2006, 1:50 PM
 */

package Formulas;

import javax.microedition.midlet.*;
import javax.microedition.lcdui.*;

import net.dclausen.microfloat.*;
/**
 *
 * @author user
 */
public class IdealBodyWeight extends MIDlet 
        implements javax.microedition.lcdui.CommandListener,
                   javax.microedition.lcdui.ItemStateListener {
    
    /** Creates a new instance of IdealBodyWeight */
    public IdealBodyWeight() {
    }
 
    private Persistence.FormulaValue get_formulaValue() {
        return new Persistence.FormulaValue("Ideal Body Weight [kg]", get_result().getText());
    }
    
// --- This section is auto-generated by NetBeans IDE. Do not modify or you may lose your changes.//<editor-fold id="MVDMethods" defaultstate="collapsed" desc="This section is auto-generated by NetBeans IDE.">//GEN-BEGIN:MVDMethods
    /**
     * This method initializes UI of the application.
     */
    private void initialize() {
// For adding user code into this block, select "Design" item in the inspector and invoke property editor on Action property in Properties window.
        javax.microedition.lcdui.Display.getDisplay(this).setCurrent(get_ibwForm());
    }
    
    /**
     * Called by the system to indicate that a command has been invoked on a particular displayable.
     * @param command the Command that ws invoked
     * @param displayable the Displayable on which the command was invoked
     **/
    public void commandAction(javax.microedition.lcdui.Command command, javax.microedition.lcdui.Displayable displayable) {
        if (displayable == ibwForm) {
            if (command == backCommand1) {
// For adding user code into this block, select "Design | Screens | ibwForm [Form] | Assigned Commands | backCommand1" item in the inspector and invoke property editor on Action property in Properties window.
                javax.microedition.lcdui.Display.getDisplay(this).setCurrent(null);
                destroyApp(true);
                notifyDestroyed();
            } else if (command == saveCommand) {
// For adding user code into this block, select "Design | Screens | ibwForm [Form] | Assigned Commands | saveCommand" item in the inspector and invoke property editor on Action property in Properties window.
                Persistence.PatientSuiteDispatcher.invoke(this, get_ibwForm(), get_formulaValue());
            }
        }
    }
    
    /**
     * This method returns instance for ibwForm component and should be called instead of accessing ibwForm field directly.
     * @return Instance for ibwForm component
     **/
    private javax.microedition.lcdui.Form get_ibwForm() {
        if (ibwForm == null) {
            ibwForm = new javax.microedition.lcdui.Form("Ideal Body Weight", new javax.microedition.lcdui.Item[] {
                get_gender(),
                        get_height(),
                        get_result()
            });
            ibwForm.addCommand(get_backCommand1());
            ibwForm.addCommand(get_saveCommand());
            ibwForm.setCommandListener(this);
        }
        return ibwForm;
    }
    
    /**
     * This method returns instance for backCommand1 component and should be called instead of accessing backCommand1 field directly.
     * @return Instance for backCommand1 component
     **/
    private javax.microedition.lcdui.Command get_backCommand1() {
        if (backCommand1 == null) {
            backCommand1 = new javax.microedition.lcdui.Command("Back", javax.microedition.lcdui.Command.BACK, 1);
        }
        return backCommand1;
    }
    
    /**
     * This method returns instance for height component and should be called instead of accessing height field directly.
     * @return Instance for height component
     **/
    private javax.microedition.lcdui.TextField get_height() {
        if (height == null) {
            height = new javax.microedition.lcdui.TextField("Height [cm]", "", 4, 0x0);
        }
        return height;
    }
    
    /**
     * This method returns instance for result component and should be called instead of accessing result field directly.
     * @return Instance for result component
     **/
    private javax.microedition.lcdui.StringItem get_result() {
        if (result == null) {
            result = new javax.microedition.lcdui.StringItem("Weight [kg] =", "");
        }
        return result;
    }
    
    /**
     * This method returns instance for gender component and should be called instead of accessing gender field directly.
     * @return Instance for gender component
     **/
    private javax.microedition.lcdui.ChoiceGroup get_gender() {
        if (gender == null) {
            gender = new javax.microedition.lcdui.ChoiceGroup("Gender", javax.microedition.lcdui.Choice.EXCLUSIVE, new java.lang.String[] {
                "Male",
                        "Female"
            }, new javax.microedition.lcdui.Image[] {
                null,
                        null
            });
            gender.setSelectedFlags(new boolean[] {
                true,
                        false
            });
        }
        return gender;
    }
    
    /**
     * This method returns instance for saveCommand component and should be called instead of accessing saveCommand field directly.
     * @return Instance for saveCommand component
     **/
    private javax.microedition.lcdui.Command get_saveCommand() {
        if (saveCommand == null) {
            saveCommand = new javax.microedition.lcdui.Command("Save", javax.microedition.lcdui.Command.ITEM, 1);
        }
        return saveCommand;
    }
    
    javax.microedition.lcdui.Form ibwForm;
    javax.microedition.lcdui.Command backCommand1;
    javax.microedition.lcdui.TextField height;
    javax.microedition.lcdui.StringItem result;
    javax.microedition.lcdui.ChoiceGroup gender;
    javax.microedition.lcdui.Command saveCommand;
// --- This is the end of auto-generated section.//</editor-fold>//GEN-END:MVDMethods
    
    public void startApp() {
        initialize();
        get_ibwForm().setItemStateListener(this);
    }
    
    public void pauseApp() {
    }
    
    public void destroyApp(boolean unconditional) {
    }
    
    public void itemStateChanged(javax.microedition.lcdui.Item item) {
        if (!allItemsValid()) {
            get_result().setText("<make sure there's a value for height and it's valid>");
        } else {
            String result;
            if (get_gender().getSelectedIndex() == 0) {
                result = calculateForMale();
            } else {
                result = calculateForFemale();
            }
            get_result().setText(result);
        }
    }
    
    private String heightToInches() {
        return new Float(get_height().getString()).div("2.54").toString();
    }
    
    private String calculateForMale() {
        INumeric heightMinus60 = new Float(heightToInches()).sub("60");
        return new Float("51.65").add(new Float("1.85").mul(heightMinus60)).format(2);
    }
    
    private String calculateForFemale() {
        INumeric heightMinus60 = new Float(heightToInches()).sub("60");
        return new Float("48.67").add(new Float("1.65").mul(heightMinus60)).format(2);
    }
    
    private boolean allItemsValid() {
        try {
            MicroFloat.parseFloat(get_height().getString());
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
}
